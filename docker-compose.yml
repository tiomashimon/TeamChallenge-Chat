version: '3'
services:
  backend:
    environment:
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379
    build:
      context: ./Backend/
      dockerfile: ./Docker/local/Dockerfile
    restart: always
    command: /bin/bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./Backend/:/code
    depends_on:
      - db
      - redis
    networks:
      - my_network

  db:
    image: postgres
    restart: always
    env_file: Backend/.env
    ports:
      - 5433:5432
    networks:
      - my_network

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - my_network

  celery:
    build:
      context: ./Backend/
      dockerfile: ./Docker/local/Dockerfile
    command: celery -A main worker -l info
    volumes:
      - ./Backend/:/code
    depends_on:
      - backend
      - redis
    networks:
      - my_network

  celery-beat:
    build:
      context: ./Backend/
      dockerfile: ./Docker/local/Dockerfile
    command: celery -A main beat -l info
    volumes:
      - ./Backend/:/code
    depends_on:
      - backend
      - redis
      - db
    networks:
      - my_network

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    depends_on:
      - backend
      - celery
    networks:
      - my_network

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./Frontend
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./Frontend:/app
  #   depends_on:
  #     - backend
  #   networks:
  #     - my_network

networks:
  my_network:
    driver: bridge
